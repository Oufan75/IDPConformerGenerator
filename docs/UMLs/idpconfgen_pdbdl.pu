@startuml

start

:idpconfgen //pdbdl//;

partition #LIGHTGREY Examples {
    #WHITE:$ idpconfgen pdbdl culled.list -d folder -u -n;
    note right
        where //culled.list// is a list containing PDBID[CHAIN] codes,
        and //folder// is a destination folder that may not exist.
    end note
    #WHITE:$ idpconfgen pdbdl 12AS_A 4YBB_B culled.list -d pdbs.tar -u -n -chunks 5000;
    note right
        where //pdbs.tar// is a destination
        tar file.
    end note
    #WHITE:$ idpconfgen pdbdl 12AS -d pdbs.tar -u;
    }

:tokenizes input, identifying PDBIDs
and respective chains;

:Compares destination folder/file,
to download only missing entries;

:filters out PDBID:CHAIN codes
known to be conflictive;
note right
    1MH1_A
    total: 8 chains
end note

#FFD3F2:repeat ://for each chunk of paths//;
fork

:downloads PDB or mmCIF;
note right
    Attempts to download PDB,
    if unavailable, attempts CIF.
end note

partition #e6ffe6 "filtering **in**" {
    :converts PDB and mmCIF to the same internal format;
    :select MODEL 1 (if multiple MODELS);
    :select desired CHAIN;
    note right
        details later
    end note
    :keep altLoc //None//, 'A' or '1';
    note right
        altLoc //1// in mmCIFs is converted
        to 'A' because the former was found
        to break //dssp// calculations.
    end note
}

partition #ffe6e6 "filter out" {
    :non- N, C, CA, O, S, Se, H, D;
    :non- ribonucleiotides;
    :non- ligand/solvent (>1500);

}

partition "chain selection" {
    :probe UPPER/LOWER case chains:

        * Example: AA, Aa, aA, aa
        * attempt the selected chain first (highest probability);
    note right
        Dunbrack PISCES's culled list
        provides all chains in UPPER case, this
        many times conflicts with mmCIF format,
        forcing the algorithm to try different chains.
    end note
    :loop through possible combinations;
    if (empty selection) then (yes)
        stop
    elseif (or all //HETATM// lines) then (yes)
        stop
    else
        :found meaninful selection;
    endif
}

partition "additional parsing" {
    :renumber atoms for saved chains;
    :delete insertion codes
        (//pdb_delinsertion// from //pdb-tools//);
}


end fork
note right
    This block is performed for each
    PDB file. In multiprocessing mode,
    each core pick a PDB code and run the whole
    block, once it is finished another PDB code
    is picked.
end note
:Data is saved per chunk to the disk;
if (destination `-d`) then (TAR)
    :save PDBs to TAR file;
else (folder)
    :save PDBs to folder;
    note right #lightgrey
    mmCIF chains have been parsed
    to PDB format
    end note
endif
backward://launch another chunk//;
repeat while (//more PDBs to process?//)

stop

@enduml
